@mixin linear-gradient-vertical($start-color, $end-color) {
  background-color: $start-color;
  background-image: -webkit-gradient(linear, left top, left bottom, from($start-color), to($end-color));
  background-image: -webkit-linear-gradient(top, $start-color, $end-color);
  background-image: -moz-linear-gradient(top, $start-color, $end-color);
  background-image: -ms-linear-gradient(top, $start-color, $end-color);
  background-image: -o-linear-gradient(top, $start-color, $end-color);
  background-image: linear-gradient(top, $start-color, $end-color);
  filter: progid:DXImageTransform.Microsoft.gradient(start-colorStr='#{$start-color}', end-colorStr='#{$end-color}');
}

@mixin linear-gradient-horizontal($start-color, $end-color) {
  background-color: $start-color;
  background-image: -webkit-gradient(linear, left top, right top, from($start-color), to($end-color));
  background-image: -webkit-linear-gradient(left, $start-color, $end-color);
  background-image: -moz-linear-gradient(left, $start-color, $end-color);
  background-image: -ms-linear-gradient(left, $start-color, $end-color);
  background-image: -o-linear-gradient(left, $start-color, $end-color);
  background-image: linear-gradient(left, $start-color, $end-color);
  filter: progid:DXImageTransform.Microsoft.gradient(start-colorStr='#{$start-color}', end-colorStr='#{$end-color}', gradientType='1');
}

@mixin box-shadow($h-shadow, $v-shadow, $blur, $color) {
  // Note: no spread value included
  -moz-box-shadow: $h-shadow $v-shadow $blur $color;
  -webkit-box-shadow: $h-shadow $v-shadow $blur $color;
  box-shadow: $h-shadow $v-shadow $blur $color;
}
