<%= semantic_form_for rule, :url => action_path do |form| %>
  <li class="string" id="rule_primary_value_input">
    <label for="rule_primary_value">Primary value</label>
    <a href="#" id="secondary-value-toggle">(show secondary values)</a><br/>
    <%= text_field_tag 'rule[primary_value]', primary_value.value %>
  </li>

  <%= field_set_tag 'Secondary values', :id => 'secondary-values' do %>
    <div id="secondary-value-container">
      <% @secondary_values.each_with_index do |secondary_value, i| %>
        <div>
          <% delete_url = secondary_value.id && admin_rule_value_path(secondary_value) %>
          <%= text_field_tag "rule[secondary_values][#{i}]", secondary_value.value %>
          <%= submit_tag("Delete this rule", :class => 'delete-rule-value-button', :disabled => true, 'data-delete-rule-url' => delete_url, 'data-value-text' => secondary_value.value) unless secondary_value.new_record? %>
        </div>
      <% end %>

    </div>

    <a href="#" id="add-secondary-value-row">Add secondary value</a>
  <% end %>

  <%= form.input :points %>
  <li id='reply_max_length_info_holder'>
    <div id='reply_max_length_info'>
      Max Length: 120 chars, or 100 chars if has goal<br><br>
      <div class='inline'>Current: &nbsp;</div><div id='current_reply_length'></div>
    </div>
  </li>
  <%= form.input :reply, :as => :text, :input_html => {class: 'small_text_area'} %>
  <!-- No more byte counter  # add_byte_counter_for 'Reply'  -->
  <%= form.input :description, :as => :text, :input_html => {class: 'small_text_area'}, :hint => "Leave this blank and acts resulting from use of this rule won't appear in the activity feed, etc." %>
  <%= form.input :alltime_limit %>
  <%= form.input :referral_points %>
  <div>Tags</div>
  <table class='tags'>
  <tr><th class='primary'>Primary</th><th class='secondary'>Selected<th class='tag_name'>Tag</th></tr>
  <% Tag.all.sort_by{|a| a.name }.each do |t| %>
    <tr>
      <% checked = (t.id == @rule.primary_tag_id) %>
      <% tag_class = checked ? "selected_primary" : "" %>
      <td class='primary'><%= radio_button_tag "rule[primary_tag_id]", t.id, checked  %></td>
      <td class='secondary'><%= check_box_tag "rule[tag_ids][#{t.id}]", "1", @rule.tag_ids.include?(t.id) %></td>
      <td class='tag_name <%= tag_class %>'><%= label_tag "rule[tag_ids][#{t.id}]", t.name %></td>
    </tr>
  <% end %>
  </table>



  <%= form.input :suggestible %>
  <%= form.submit %>
  <%= link_to 'Cancel', rules_index(@demo) %>
<% end %>

<% content_for :javascript do %>
  <%= javascript_tag do %>
    countReplyCharacters();
    // 'keypress' responds more quickly, but doesn't work with backspace in Chrome
    // so I add the same thing for 'keyup' for the Chrome users
    // note that 'keypress' needs a delay to way for the input, while 'keyup' does not
    $('#rule_reply').keyup(function(){
      countReplyCharacters();
    });
    $('#rule_reply').keypress(function(){
      setTimeout('countReplyCharacters()', 1);
    });
    
    function countReplyCharacters(){
      var count = $('#rule_reply').val().length; 
      $('#current_reply_length').text(count);
    }

    $('a#secondary-value-toggle').click(function(e) {
      $('fieldset#secondary-values').toggle();
      e.preventDefault();
    });

    $('#rule_points').blur(function(e) {
      var reply_field = $('#rule_reply');
      if (reply_field.val().trim().length == 0) {
        reply_field.val('+' + $(this).val() + ' points. ');
      }
    });

    var nextRuleValueIndex = <%= secondary_values.length %>;

    $('a#add-secondary-value-row').click(function(e) {
      nextFieldName = 'rule[secondary_values][' + nextRuleValueIndex + ']';

      $('#secondary-value-container').append('<div><input type="text" name="' + nextFieldName + '"></div>');

      nextRuleValueIndex++;
      e.preventDefault();
    });

    function deleteRuleValue(callingButton) {
      var container = callingButton.parent();
      container.append('<%=escape_javascript(image_tag('spinner.gif', :class => 'spinner'))%>');

      $.post(
        callingButton.data('delete-rule-url'),
        {'_method': 'DELETE'},
        function(data, status, xhr) {container.remove();}
      )
    }

    $('.delete-rule-value-button').
      click(function(e) {
        if (confirm('Are you sure you want to delete the alias "' + $(this).data('value-text') + '"?')) {
          deleteRuleValue($(this));
        }
        e.preventDefault();
      }).
      attr('disabled', false);
  <% end %>
<% end %>
