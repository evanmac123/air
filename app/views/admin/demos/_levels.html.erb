<%= form.inputs :name => "Levels", :id => 'levels' do %>
  <% demo.levels.each_with_index do |level, level_index| %>
    <%= label_tag "demo_levels_#{level_index}_threshold", "Threshold" %>
    <%= text_field_tag "demo[levels][#{level_index}][threshold]" %>
    <%= label_tag "demo_levels_#{level_index}_name", "Name of Level" %>
    <%= text_field_tag "demo[levels][#{level_index}][name]", nil, :maxlength => 140 %>
    <%= add_byte_counter_for('Name') %>
    <br/>
  <% end %>

  <%= link_to 'Add another', '#', :id => 'add-level-row' %>
<% end %>

<% content_for :javascript do %>
  <%= javascript_tag do %>
    var nextLevelIndex = <%= demo.levels.length %>;

    function humanize(fieldName) {
      var unUnderscored = fieldName.replace('_', ' ');
      return unUnderscored[0].toUpperCase() + unUnderscored.substr(1);
    }

    function addInputRow(fieldObjectPrefix, index, fieldNames, addingAnchor) {
      fieldIdPrefix = ['demo', '_', fieldObjectPrefix, '_', index, '_'].join('')
      fieldNamePrefix = ['demo[', fieldObjectPrefix, '][', index, ']['].join('');

      newHTML = $.map(fieldNames, function(fieldName) {
        return [

          '<label for="', fieldIdPrefix, fieldName, '">', humanize(fieldName), '</label>',
          '<input type="text" id="', fieldIdPrefix, fieldName, '" name="', fieldNamePrefix, fieldName, ']">'
        ].join('')
      }).join('') + "<br/>";

      addingAnchor.before(newHTML);
    };

    function addLevelRow(addingAnchor) {
      addInputRow(
        'levels',
        nextLevelIndex,
        ['threshold', 'name'],
        addingAnchor
      );

      nameFieldId = '#demo_levels_' + nextLevelIndex + '_name';
      $(nameFieldId).attr('maxlength', 140);
      addByteCounterFor(nameFieldId);

      nextLevelIndex++;
    };

    $('#add-level-row').click(function(e) {
      e.preventDefault();
      addLevelRow($(this));
    });
  <% end %>
<% end %>
